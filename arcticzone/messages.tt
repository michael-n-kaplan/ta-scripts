#class {messages}{kill}
#class {messages}{open}

#nop {
    Relies on base.tt to set up config variable.  Reacts to messages by
modifying global state variables.

  TODO: check to see if base.tt is loaded and generate an error message
        if not.
}

#event {RECEIVED OUTPUT} { #var {state[receivedOutput]} $TRUE }

#nop {person or mob, hit 'enter' to get more info}
#act {enters the arena through the dungeon gate} { #send {} }

#act {The waterskin is empty} {#var {state[noWater]} {$TRUE}}
#act {You don't seem to have one of those} {#var {state[noFood]} {$TRUE}}

#act {Attack ready!} {#var {state[physTick]} 0}
#act {Spell ready!} {#var {state[spellTick]} 0}

#act {You're thirsty.} {#var {state[thirsty]} {$TRUE}}
#act {You're hungry.} {#var {state[hungry]} {$TRUE}}

#act {There is a%? %w%? %*here.} { #var {state[cur_mob]} %2}
#nop strip last characters of multy-mobs to account for es / ies
#nop thos letter will prevent attacks
#act {There are %w %w%?%?%? %*here.} { #var {state[cur_mob]} %2}
#act {There is nobody here.} { #var {state[cur_mob]} "0"}
#act {enters the arena through the dungeon gate} { #send {} }
#act {A %1 appears in a puff of reddish smoke} { #send {}}
#act {%1 is asking to join your group.} {add %1}
#act {The %1 falls to the ground lifeless} {#var {state[cur_mob]} "0" }
#act {From %1: %2} { }

#act {^You're in the %1.$} {
  #regexp {%1} {arena} {#var {state[inArena]} $TRUE} {#var {state[inArena]} $FALSE}
}

#act {Type 'STATBAR' for a list of statbar options.} {
    #showme {Setting statbar};
    #send {statbar 0 on};
    #send {statbar 1 on};
    #send {statbar 2 on};
    #send {statbar 3 on};
    #send {statbar 4 on};
    #send {statbar 5 on};
    #send {statbar 6 on}
}

#act {HP:%d/%d MA:%d/%d LV:%d EXP:%d PER:%d%% EX:}
{
    #var {state[curHP]} {%1};
    #var {state[curMP]} {%3};
    #var {state[maxHP]} {%2};
    #var {state[maxMP]} {%4};
    #math {state[hpp]} {$state[curHP] * 100 / $state[maxHP]};
    #math {state[mpp]} {$state[curMP] * 100 / $state[maxMP]};
    #var {state[exp]}  {%6}
};


#act {^Your attack hit} {#var {state[physTick]} 15};
#act {^Your skillful attack} {#var {state[physTick]} 15};
#act {^Your attack missed} {#var {state[physTick]} 15};
#act {^Sorry, you don't see} {#var {state[cur_mob]} "0"};
#act {dodged your attack} { #var {state[physTick]} 15 }

#class {messages}{close}