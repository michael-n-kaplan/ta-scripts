#class movement kill
#class movement open

#alias test_result {
   #if {$state[receivedOutput] == $FALSE} {
     #delay {waitMove} {test_result} {.5}
   } {
   #if {$state[moveOK] == $FALSE || $state[lastCommandOK] == $FALSE} {
     #echo {move or last command failed, rerun};
     #delay {movePause} {runpath} {.75};
   } { 
     #echo {all is well};
     #math next_step {$next_step + 1};
     #delay {movePause} {runpath} {.1}
   }
   }
};

#alias runpath {
  #list mpath size path_len;
  #if {$next_step > $path_len} { #nop } {
    #list mpath get $next_step step;
    #var {state[moveOK]} $TRUE;
    #var {state[lastCommandOK]} $TRUE;
    #var {state[receivedOutput]} $FALSE;
    #send $step;
    #delay {waitMove} {test_result;} {.5};
  }
};

#alias t1food {
  #list mpath create w ne {buy meal} {buy drink} sw e;
  #var next_step 1;
  runpath
};

#alias t1heal {
  #list mpath create w w {buy healing} e e st;
  #var next_step 1;
  runpath
}

#alias t2heal {
  #list mpath create s s s s {buy healing} n n n n st;
  #var next_step 1;
  runpath
}

#alias t2food {
  #list mpath create s s w w sw sw {buy meal} {buy drink} ne ne e e n n st;
  #var next_step 1;
  runpath
}

#alias pathto {
  #map find %1;
  #path save forward ppath;
  #forall {$ppath} {$list mpath add &0};
  #var next_step 1;
  runpath
}

#class movement close
